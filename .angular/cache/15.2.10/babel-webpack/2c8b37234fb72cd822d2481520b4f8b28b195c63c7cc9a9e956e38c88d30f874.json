{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let CampaignService = /*#__PURE__*/(() => {\n  class CampaignService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.campaignTypeUrl = 'http://localhost:8080/campaignType';\n      // private campaignTypeUrl = 'https://apicampaign.herokuapp.com/campaignType';\n      this.headers = new HttpHeaders().set('Content-Type', 'application/json');\n      this.url = 'http://localhost:8080/post';\n    }\n    createcampaignType(payload) {\n      return this.http.post(`${this.campaignTypeUrl}/register`, payload);\n    }\n    createcampaignSubcription(payload) {\n      return this.http.post(`${this.campaignTypeUrl}/subscription`, payload);\n    }\n    // GET ALL THE CAMPAIGN TYPES\n    getcampaignType() {\n      return this.http.get(`${this.campaignTypeUrl}/ALL`);\n    }\n    //GET AA PARTICULAR CAMPAIGN TYPE BY NAME\n    getcampaignTypeByName(campaignName) {\n      return this.http.get(`${this.campaignTypeUrl}/campaignName/${campaignName}`);\n      // return this.http.get<campaignType>(`${this.campaignTypeUrl}/${campaign.campaignName}`);\n    }\n\n    updatecampaignType(_id, campaign) {\n      return this.http.patch(`${this.campaignTypeUrl}/${campaign.campaignName}`, campaign).pipe(catchError(this.errorHandler));\n    }\n    errorHandler(error) {\n      return throwError(error);\n    }\n    deletecampaignType(_id) {\n      return this.http.delete(`${this.campaignTypeUrl}/${_id}`);\n    }\n    // Error \n    handleError(error) {\n      let msg = '';\n      if (error.error instanceof ErrorEvent) {\n        // client-side error\n        msg = error.error.message;\n      } else {\n        // server-side error\n        msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n      return throwError(msg);\n    }\n    createPost(name, price, image) {\n      const formData = new FormData();\n      formData.append('image', image);\n      formData.append('name', name);\n      formData.append('price', price);\n      //  return this.http.post(this.url,formData);\n      return this.http.post(`${this.url}/create`, formData);\n    }\n    // GET ALL THE CAMPAIGN POST\n    getPost() {\n      return this.http.get(`${this.url}/All`);\n    }\n    // GET SINGLE THE CAMPAIGN POST\n    getOne(_id) {\n      return this.http.get(`${this.url}/single/${_id}`);\n      // return this.http.get<campaignType>(`${this.campaignTypeUrl}/${campaign.campaignName}`);\n    }\n  }\n\n  CampaignService.ɵfac = function CampaignService_Factory(t) {\n    return new (t || CampaignService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  CampaignService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CampaignService,\n    factory: CampaignService.ɵfac,\n    providedIn: 'root'\n  });\n  return CampaignService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}