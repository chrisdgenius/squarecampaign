{"ast":null,"code":"import { UntypedFormGroup, UntypedFormControl } from '@angular/forms';\nimport { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/campaign.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/cdk/text-field\";\nimport * as i10 from \"@angular/material/input\";\nconst _c0 = [\"autosize\"];\nfunction PostComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r1.imageData, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r1.form.value.name);\n  }\n}\nexport let PostComponent = /*#__PURE__*/(() => {\n  class PostComponent {\n    constructor(campaignService, _ngZone, router, dialogRef) {\n      this.campaignService = campaignService;\n      this._ngZone = _ngZone;\n      this.router = router;\n      this.dialogRef = dialogRef;\n    }\n    triggerResize() {\n      // Wait for changes to be applied, then trigger textarea resize.\n      this._ngZone.onStable.pipe(take(1)).subscribe(() => this.autosize.resizeToFitContent(true));\n    }\n    ngOnInit() {\n      //initialise the variables in the reactive form.\n      // the form will have name and image as FormControl\n      this.form = new UntypedFormGroup({\n        name: new UntypedFormControl(''),\n        price: new UntypedFormControl(''),\n        image: new UntypedFormControl(null)\n      });\n    }\n    // when an input type file is selected, this function is called\n    onFileSelect(event) {\n      //const file = (event.target as HTMLInputElement).files[0];\n      //choose the first image if multiple images are selected\n      const target = event.target;\n      const file = target.files[0];\n      // TO GET THE FILE NAME\n      this.fileName = target.files[0].name;\n      //const file: File = (target.files as FileList)[0];\n      //set the file as image on the form\n      this.form.patchValue({\n        image: file\n      });\n      //define the image format\n      const allowedMimeTypes = ['image/png', 'image/jpeg', 'image/jpg'];\n      // Read the selected image data\n      if (file && allowedMimeTypes.includes(file.type)) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.imageData = reader.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n    onSubmit() {\n      if (this.form.value.name === '') {\n        this.form.value.name = this.fileName;\n      }\n      // this.profileService.uploadImage(this.form.value.name, this.form.value.image);\n      this.campaignService.createPost(this.form.value.name, this.form.value.price, this.form.value.image).subscribe(res => {\n        console.log('new image', res);\n      });\n      this.form.reset();\n      this.imageData = null;\n      this.reloadPage();\n      this.closeDialog();\n      this.router.navigate(['/campaign/viewposts']);\n    }\n    closeDialog() {\n      this.dialogRef.closeAll();\n    }\n    reloadPage() {\n      window.location.reload();\n    }\n  }\n  PostComponent.ɵfac = function PostComponent_Factory(t) {\n    return new (t || PostComponent)(i0.ɵɵdirectiveInject(i1.CampaignService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n  PostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PostComponent,\n    selectors: [[\"app-post\"]],\n    viewQuery: function PostComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autosize = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"submit\"], [\"mat-icon-button\", \"\", 1, \"close-button\", 3, \"mat-dialog-close\"], [\"color\", \"warn\", 1, \"close-icon\"], [\"mat-dialog-title\", \"\"], [\"src\", \"https://c.mql5.com/avatar/2021/11/6198BFC2-DE1B_big.jpg\", 1, \"user-image\"], [1, \"textarea\"], [\"formControlName\", \"name\", \"placeholder\", \"\", \"matInput\", \"\", \"cdkTextareaAutosize\", \"\", \"cdkAutosizeMinRows\", \"10\", \"cdkAutosizeMaxRows\", \"20\"], [\"autosize\", \"cdkTextareaAutosize\"], [4, \"ngIf\"], [\"mat-dialog-actions\", \"\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 3, \"click\"], [\"hidden\", \"\", \"type\", \"file\", \"id\", \"file\", 3, \"change\"], [\"fileInput\", \"\"], [1, \"filler\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", 1, \"post-button\"], [1, \"post-img\", 3, \"src\", \"alt\"]],\n    template: function PostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function PostComponent_Template_form_submit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"button\", 1)(2, \"mat-icon\", 2);\n        i0.ɵɵtext(3, \"close\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"h2\", 3);\n        i0.ɵɵelement(5, \"img\", 4);\n        i0.ɵɵtext(6, \" Create a campaign \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-dialog-content\")(8, \"div\")(9, \"mat-form-field\", 5)(10, \"mat-label\");\n        i0.ɵɵtext(11, \" Highlight your campain\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"textarea\", 6, 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(14, PostComponent_div_14_Template, 2, 2, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 9)(16, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function PostComponent_Template_button_click_16_listener() {\n          i0.ɵɵrestoreView(_r3);\n          const _r2 = i0.ɵɵreference(20);\n          return i0.ɵɵresetView(_r2.click());\n        });\n        i0.ɵɵelementStart(17, \"mat-icon\");\n        i0.ɵɵtext(18, \"add_a_photo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 11, 12);\n        i0.ɵɵlistener(\"change\", function PostComponent_Template_input_change_19_listener($event) {\n          return ctx.onFileSelect($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"div\", 13);\n        i0.ɵɵelementStart(22, \"button\", 14);\n        i0.ɵɵtext(23, \"Post\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"mat-dialog-close\", true);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.imageData);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.MatFormField, i6.MatLabel, i7.MatButton, i8.MatIcon, i3.MatDialogClose, i3.MatDialogTitle, i3.MatDialogContent, i3.MatDialogActions, i9.CdkTextareaAutosize, i10.MatInput],\n    styles: [\".textarea[_ngcontent-%COMP%]{width:100%}.post-img[_ngcontent-%COMP%]{width:40%;height:200px;margin-left:30%}.post-button[_ngcontent-%COMP%]{color:#f0f8ff;background-color:#1db2ec}.filler[_ngcontent-%COMP%]{flex-grow:1;background:lightgreen}.user-image[_ngcontent-%COMP%]{width:90px;height:90px;border-radius:50px;padding:10px}.flex-row[_ngcontent-%COMP%]{display:flex;flex-direction:row}.close-button[_ngcontent-%COMP%]{float:right;top:-24px;right:-24px}.close-icon[_ngcontent-%COMP%]{transition:1s ease-in-out}.close-icon[_ngcontent-%COMP%]:hover{transform:rotate(180deg)}  .icon-outside .close-button{float:right;top:-52px;right:-52px}  .icon-outside .mat-dialog-container{overflow:unset}\"]\n  });\n  return PostComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}