{"ast":null,"code":"import { UntypedFormGroup, UntypedFormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/auth/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../services/wallet.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"flutterwave-angular-v3\";\nexport let WalletComponent = /*#__PURE__*/(() => {\n  class WalletComponent {\n    //meta = { counsumer_id: '7898', consumer_mac: 'kjs9s8ss7dd' };\n    constructor(authService, fb, walletService, router, flutterwave, activatedRouted) {\n      this.authService = authService;\n      this.fb = fb;\n      this.walletService = walletService;\n      this.router = router;\n      this.flutterwave = flutterwave;\n      this.activatedRouted = activatedRouted;\n      this.userDetail = {};\n      this.customerDetails = {};\n      this.transactionDetail = {};\n      this.userId = '';\n      this.userId2 = '';\n      this.name = '';\n      this.firstName = '';\n      this.publicKey = 'FLWPUBK_TEST-05fb0f05a47123563819869d99d20de6-X';\n      this.customizations = {\n        title: 'Customization Title',\n        description: 'Customization Description',\n        logo: 'https://flutterwave.com/images/logo-colored.svg'\n      };\n      this.form = this.fb.group({\n        amount: ['']\n      });\n    }\n    ngOnInit() {\n      //localStorage.setItem('key_id', JSON.stringify(data.id) )\n      let idData = this.authService.getToken();\n      console.log('access_token', idData);\n      this.userId = idData;\n      // old\n      this.activatedRouted.params.subscribe(data => {\n        this.userId2 = data.id;\n        console.log(this.userId);\n      });\n      // GET THE DETAILS FROM THE DATABASE BY SUBSCRIBING TO THE  SERVICE\n      this.authService.getUserById(this.userId).subscribe(res => {\n        this.userDetail = res;\n        // this.customerDetails= res.email;\n        console.log('the paymentis from: ', this.userDetail);\n        this.customerDetails.name = this.userDetail.msg.firstName, this.customerDetails.email = this.userDetail.msg.email;\n      });\n      console.log('the customer: ', this.customerDetails);\n      //  phone_number: this.form.amount.value,\n      //initialise the variables in the reactive form.\n      // the form will have name and image as FormControl\n      this.form = new UntypedFormGroup({\n        //   name: new FormControl(''),\n        amount: new UntypedFormControl('')\n        //    email: new FormControl(''),\n      });\n    }\n    //Inject the flutterwave service\n    makePayment() {\n      this.flutterwave.inlinePay({\n        amount: this.form.value.amount,\n        public_key: this.publicKey,\n        tx_ref: this.generateReference(),\n        //amount: this.form.value.amount,\n        currency: 'NGN',\n        payment_options: 'card,ussd',\n        redirect_url: 'http://localhost:8080/transaction/response',\n        //meta: this.meta,\n        customer: this.customerDetails,\n        customizations: this.customizations,\n        callback: this.makePaymentCallback,\n        onclose: this.closedPaymentModal,\n        callbackContext: this\n      });\n    }\n    makePaymentCallback(response) {\n      console.log('Payment callback', response);\n    }\n    closedPaymentModal() {\n      console.log('payment is closed');\n    }\n    generateReference() {\n      let date = new Date();\n      return date.getTime().toString();\n    }\n    walletbalance() {\n      //Note: The userId was added to the router url as id from the routerlink in the html ofthe parent component\n      this.activatedRouted.params.subscribe(data => {\n        this.userId = data.id;\n        console.log(this.userId);\n        this.walletService.walletBalance(this.userId).subscribe(walletData => {\n          this.walletDetail = walletData;\n          console.log(this.walletDetail);\n        });\n      });\n    }\n  }\n  WalletComponent.ɵfac = function WalletComponent_Factory(t) {\n    return new (t || WalletComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.WalletService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.Flutterwave), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  WalletComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WalletComponent,\n    selectors: [[\"app-wallet\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"submit\"], [\"type\", \"number\", \"formControlName\", \"amount\"], [\"type\", \"submit\", \"target\", \"_blank\"], [\"innerHtml\", i0.ɵɵtrustConstantHtml`htmlContent`]],\n    template: function WalletComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function WalletComponent_Template_form_submit_0_listener() {\n          return ctx.makePayment();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\");\n        i0.ɵɵtext(3, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 2);\n        i0.ɵɵtext(6, \"Pay via promise\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return WalletComponent;\n})();\nfunction ngAfterViewInit() {\n  throw new Error('Function not implemented.');\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}